name: Test with Terraform
on:
  push:
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "examples/*.tf"
      - ".github/workflows/test-tf.yml"
  pull_request:
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "examples/*.tf"
      - ".github/workflows/test-tf.yml"
env:
  ARTIFACT_NAME: provider
  PROVIDER_NAME: terraform-provider-discord
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version-file: go.mod
      - name: Build
        run: go build -o ${{ env.PROVIDER_NAME }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PROVIDER_NAME }}
  tf:
    name: Plan and Apply example tf
    runs-on: ubuntu-latest
    needs:
      - build
    defaults:
      run:
        working-directory: examples
    env:
      TF_API_TOKEN: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      TF_VAR_discord_bot_token: ${{ secrets.DISCORD_BOT_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
      - name: Download and move the provider
        env:
          TERRAFORM_PROVIDER_PATH: ~/.terraform.d/plugins/local/Lucky3028/discord/1.0.0/linux_amd64/
        working-directory: ../
        run: |
          mkdir -p ${{ env.TERRAFORM_PROVIDER_PATH }}
          mv ${{ env.PROVIDER_NAME }} ${{ env.TERRAFORM_PROVIDER_PATH }}
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
      - name: Format
        run: terraform fmt -check
      - name: Init
        run: terraform init
      - name: Validate
        run: terraform validate
      - name: Plan
        run: terraform plan -input=false -no-color
        id: plan
      - name: Comment plan result to PR
        uses: robburger/terraform-pr-commenter@v1
        if: always() && github.ref != 'refs/heads/master' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
      - name: Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -input=false -auto-approve
